import FWCore.ParameterSet.Config as cms

process = cms.Process("L1ConfigWritePayloadDummy")
process.load("FWCore.MessageLogger.MessageLogger_cfi")
process.MessageLogger.cout.placeholder = cms.untracked.bool(False)
process.MessageLogger.cout.threshold = cms.untracked.string('DEBUG')
process.MessageLogger.debugModules = cms.untracked.vstring('*')

process.load("CondTools.L1Trigger.L1TriggerKeyOnline_cfi")
process.L1TriggerKeyOnline.onlineDB = cms.string('oracle://CMS_OMDS_LB/CMS_TRG_R')
process.L1TriggerKeyOnline.recordsToInclude = cms.vstring( 'L1RCTParametersRcd' )

process.load("CondCore.DBCommon.CondDBCommon_cfi")
process.orcon = cms.ESSource("PoolDBESSource",
    process.CondDBCommon,
    toGet = cms.VPSet(cms.PSet(
        record = cms.string('L1TriggerKeyListRcd'),
        tag = cms.string('L1TriggerKeyList_CRUZET_hlt')
    ))
)
process.orcon.connect = cms.string('oracle://cms_orcon_prod/CMS_COND_21X_L1T')
process.orcon.DBParameters.authenticationPath = cms.untracked.string('/nfshome0/xiezhen/conddb')

# do not load any producers for configuration data

# writer modules
process.load("CondTools.L1Trigger.L1CondDBPayloadWriter_cfi")
process.L1CondDBPayloadWriter.writeConfigData = cms.bool(False)
process.L1CondDBPayloadWriter.L1TriggerKeyListTag = cms.string('L1TriggerKeyList_CRUZET_hlt')
process.L1CondDBPayloadWriter.offlineDB = cms.string('oracle://cms_orcon_prod/CMS_COND_21X_L1T')
process.L1CondDBPayloadWriter.offlineAuthentication = cms.string('/nfshome0/xiezhen/conddb')

# Use highest possible run number so we always get the latest version
# of L1TriggerKeyList.
process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(1)
)
process.source = cms.Source("EmptyIOVSource",
    timetype = cms.string('runnumber'),
    firstRun = cms.untracked.uint32(4294967295),
    lastRun = cms.untracked.uint32(4294967295),
    interval = cms.uint32(1)
)

process.p = cms.Path(process.L1CondDBPayloadWriter)
