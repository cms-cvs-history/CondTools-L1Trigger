process CreateKey = {
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    untracked PSet maxEvents = { untracked int32 input = 10 }

    source = EmptyIOVSource {
        string timetype = "runnumber"
        untracked uint32 firstRun = 1
        untracked uint32 lastRun = 40
        uint32 interval = 1
    }
#    source = EmptySource { }

#    include "L1TriggerConfig/L1CSCTPConfigProducers/data/L1CSCTriggerPrimitivesConfig.cff"

#    es_source emptSource = EmptyESSource {
#        string recordName = "L1TriggerKeyRcd"
#        vuint32 firstValid = { 1 }
#        bool iovIsRunNotTime = false
#    }

    es_source = EmptyESSource {
        string recordName = "L1CSCTPParametersRcd"
        vuint32 firstValid = { 1 }
        bool iovIsRunNotTime = true
    }

    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "sqlite_file:test.db"
    replace CondDBCommon.catalog = "file:test.xml"

    # create data
    include "L1TriggerConfig/L1CSCTPConfigProducers/data/L1CSCTriggerPrimitivesConfig.cfi"

    # enable saver
    module save = L1TriggerKeySaver {
        string connect = "sqlite_file:test.db"
        string catalog = "file:test.xml"

        string keyTag = "current"
        string keyValue = "tag2"
    }

    module check = EventSetupRecordDataGetter {
        VPSet toGet = { {
            string record = "L1CSCTPParametersRcd"
            vstring data = {"L1CSCTPParameters"}
        } }
        untracked bool verbose = true
    }

    # configure output service
    service = PoolDBOutputService {
        using CondDBCommon
        VPSet toPut = {
        {
            string record = "L1TriggerKeyRcd"
            string tag = "current"
        },
        {
            string record = "L1CSCTPParametersRcd"
            string tag = "tag2"
        } }
    }

#    module outAscii = AsciiOutputModule {
#    }

    path p = { check, save }
#    endpath e = { outAscii }
}
