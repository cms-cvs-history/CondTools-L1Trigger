process CreateKey = {
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    untracked PSet maxEvents = { untracked int32 input = 10 }

    source = EmptyIOVSource {
        string timetype = "runnumber"
        untracked uint32 firstRun = 1
        untracked uint32 lastRun = 10
        uint32 interval = 1
    }

    es_source = EmptyESSource {
        string recordName = "L1CSCTPParametersRcd"
        vuint32 firstValid = { 1 }
        bool iovIsRunNotTime = true
    }

    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "sqlite_file:test.db"
    replace CondDBCommon.catalog = "file:test.xml"

    # create data
    include "L1TriggerConfig/L1CSCTPConfigProducers/data/L1CSCTriggerPrimitivesConfig.cfi"

    # enable saver
    # Module can be run several times provided that the following conditions are met
    # * No sinceRun is provided - illogical to save data for the same IOV several times
    # * No keyValue provided - we cann't store different IOV intervals with the same keyValue, so use generated one
    module save = L1TWriter {
        string connect = "sqlite_file:test.db"          # Database to use. Same as in PoolDBOutputService
        string catalog = "file:test.xml"                # Catalog to use. Same as in PoolDBOutputService, but only valid catalogs
                                                        # accepted, no fancy "local" or other shortcuts.

        string keyTag = "current"                       # Tag to use for the key. Optional, if missing do not save key
#        string keyValue = "tag2"                        # What value to store in L1TriggerKey and what tag should be associated
                                                        # with payload. Optional, if missing generate one

#        int32 sinceRun = 10                              # Determins what run assign as start of validity interval.
                                                        # Optional, if missing use one from EventSetup

        VPSet toSave = { {                              # Optional, if missing do not save payload
            string record = "L1CSCTPParametersRcd"      # Records to process
            vstring data = {"L1CSCTPParameters"}        # Values from record to save
        } }
    }

    module check = EventSetupRecordDataGetter {
        VPSet toGet = { {
            string record = "L1CSCTPParametersRcd"
            vstring data = {"L1CSCTPParameters"}
        } }
        untracked bool verbose = true
    }

#    module outAscii = AsciiOutputModule {
#    }

    path p = { check, save }
#    endpath e = { outAscii }
}
